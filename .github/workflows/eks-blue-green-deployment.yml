name: EKS Blue-Green Deployment

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Update kubeconfig to use the EKS cluster
        run: |
          aws eks update-kubeconfig --region eu-north-1 --name crypto-app

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push the Docker image to ECR
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          docker build -t crypto-price:${IMAGE_TAG} .
          docker tag crypto-price:${IMAGE_TAG} 654654534276.dkr.ecr.eu-north-1.amazonaws.com/crypto-price:${IMAGE_TAG}
          docker push 654654534276.dkr.ecr.eu-north-1.amazonaws.com/crypto-price:${IMAGE_TAG}

      - name: Update Blue deployment image
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          sed -i "s|image: .*/crypto-price:.*|image: 654654534276.dkr.ecr.eu-north-1.amazonaws.com/crypto-price:${IMAGE_TAG}|g" k8s/deployments/deployment-blue.yaml

      - name: Update Green deployment image
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          sed -i "s|image: .*/crypto-price:.*|image: 654654534276.dkr.ecr.eu-north-1.amazonaws.com/crypto-price:${IMAGE_TAG}|g" k8s/deployments/deployment-green.yaml

      - name: Update the Blue environment
        run: |
          kubectl apply -f k8s/deployments/deployment-blue.yaml
          kubectl rollout status deployment/crypto-app-deployment-blue -n blue

      - name: Update the Green environment
        run: |
          kubectl apply -f k8s/deployments/deployment-green.yaml
          kubectl rollout status deployment/crypto-app-deployment-green -n green

      - name: Verify Deployment
        run: |
          kubectl get pods -n blue
          kubectl get pods -n green
          kubectl get services -n blue
          kubectl get services -n green
